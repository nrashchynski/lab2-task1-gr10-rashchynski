1. Приведите примеры облачных IDE.
Repl.it: Онлайн-среда разработки, поддерживающая множество языков программирования.

GitHub Codespaces: Облачная среда разработки, интегрированная с GitHub.

CodeSandbox: Облачная IDE для веб-разработки (JavaScript, React, Vue и т.д.).

Glitch: Онлайн-платформа для создания и совместной работы над веб-приложениями.

AWS Cloud9: Облачная IDE от Amazon, поддерживающая множество языков и интеграцию с AWS.

2. Опишите процесс подключения репозитория в repl.it.
Перейдите на сайт Repl.it.

Нажмите New Repl.

Выберите язык программирования (например, C).

Нажмите Import from GitHub.

Введите URL вашего репозитория на GitHub.

Нажмите Import.

Теперь ваш репозиторий подключён, и вы можете работать с кодом прямо в Repl.it.

3. Что такое «сборка»?
Сборка — это процесс преобразования исходного кода в исполняемый файл или библиотеку. Она включает компиляцию, линковку и другие этапы, необходимые для создания готового продукта.

4. Какие утилиты могут использоваться для сборки?
Make: Утилита для автоматизации сборки на основе Makefile.

CMake: Кроссплатформенная система управления сборкой.

Gradle: Система сборки для Java и других языков.

Maven: Инструмент для сборки и управления проектами на Java.

Ant: Ещё один инструмент для сборки Java-проектов.

5. Для чего служит Makefile?
Makefile — это файл, содержащий инструкции для утилиты make. Он описывает, как собирать проект, включая компиляцию, линковку и другие задачи.

6. Что такое цель в Makefile? Приведите пример.
Цель — это задача, которую нужно выполнить. Например:

makefile
Copy
all: program
Здесь all — цель, которая зависит от program.

7. Что такое связка в Makefile? Приведите пример.
Связка — это комбинация цели, зависимостей и команд. Например:

makefile
Copy
program: main.o utils.o
    gcc -o program main.o utils.o
Здесь:

program — цель.

main.o utils.o — зависимости.

gcc -o program main.o utils.o — команда.

8. Что такое зависимость в Makefile? Приведите пример.
Зависимость — это файл или цель, которые необходимы для выполнения другой цели. Например:

makefile
Copy
program: main.o utils.o
Здесь main.o и utils.o — зависимости для цели program.

9. Что такое правило в Makefile? Приведите пример.
Правило — это команда, которая выполняется для достижения цели. Например:

makefile
Copy
main.o: main.c
    gcc -c main.c
Здесь gcc -c main.c — правило для компиляции main.c в main.o.

10. Что такое макроопределение в Makefile? Приведите пример.
Макроопределение — это переменная, которая хранит значение. Например:

makefile
Copy
CC = gcc
Теперь $(CC) можно использовать вместо gcc.

11. Какая связка используется для очистки проекта?
Связка clean используется для удаления скомпилированных файлов. Например:

makefile
Copy
clean:
    rm -f *.o program
12. В чем заключается модель КИС для проектов на языке C?
Модель КИС (Клиент-Интерфейс-Сервер) — это подход к организации кода, где:

Клиент использует услуги.

Сервер предоставляет услуги (например, функции или данные).

Интерфейс определяет, как клиент и сервер взаимодействуют (например, через заголовочные файлы).

13. Что такое стандарты кодирования и почему рекомендуется им следовать?
Стандарты кодирования — это набор правил для написания кода (например, именование переменных, отступы, комментарии). Их соблюдение улучшает читаемость, поддерживаемость и согласованность кода.

14. Какой должна быть структура проекта согласно модели КИС и правилам сборки?
src/: Исходные файлы.

include/: Заголовочные файлы.

bin/: Исполняемые файлы.

obj/: Объектные файлы.

Makefile: Файл для сборки проекта.

15. Что такое GitHub Actions и для каких задач применяется данный функционал?
GitHub Actions — это инструмент для автоматизации рабочих процессов (CI/CD). Он используется для:

Автоматической сборки и тестирования.

Развёртывания приложений.

Управления задачами (например, проверка кода, уведомления).

16. Что такое workflow в GitHub Actions? Приведите пример.
Workflow — это автоматизированный процесс, описанный в YAML-файле. Например:

yaml
Copy
name: CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: make
17. Что такое event в GitHub Actions? Приведите пример.
Event — это событие, которое запускает workflow. Например:

push: Запуск при отправке изменений в репозиторий.

pull_request: Запуск при создании или обновлении pull request.

18. Что такое job в GitHub Actions? Приведите пример.
Job — это набор шагов, которые выполняются на одном runner. Например:

yaml
Copy
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Hello, world!"
19. Что такое step в GitHub Actions? Приведите пример.
Step — это отдельная задача в job. Например:

yaml
Copy
steps:
  - run: echo "This is a step"
20. Что такое action в GitHub Actions? Приведите пример.
Action — это reusable-блок кода, который выполняет определённую задачу. Например:

yaml
Copy
steps:
  - uses: actions/checkout@v2
Здесь actions/checkout@v2 — action для клонирования репозитория.